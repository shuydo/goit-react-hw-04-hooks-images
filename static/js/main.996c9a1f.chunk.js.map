{"version":3,"sources":["js/Api.js","Comps/Searchbar.jsx","Comps/ImageGalleryItem.jsx","Comps/ImageGallery.jsx","Comps/Modal.jsx","Comps/Button.jsx","App.js","index.js"],"names":["constURL","Searchbar","onSubmitDo","className","onSubmit","e","preventDefault","target","elements","value","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","id","url","clickOnImg","src","alt","onClick","ImageGallery","imgs","clickOnGall","map","idx","webformatURL","Modal","urlBigImg","onClose","handleKeyDown","code","useEffect","window","addEventListener","document","body","classList","toggle","removeEventListener","currentTarget","Button","App","useState","query","setQuery","curPage","setCurPage","setImgs","modalImgId","setModalImgId","showM","setShowM","isLoading","setIsLoading","toggleModal","pageN","fetch","then","r","json","hits","largeImageURL","fetchPix","oldS","scrollTo","top","scrollHeight","behavior","length","el","indexOf","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.996c9a1f.chunk.js","sourcesContent":["// const {data}=await axios.get(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${this.state.query}$&page=1&per_page=12&key=21031732-6fee4eefe658f550324b0a29e`)\n// https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=что_искать&page=номер_страницы&per_page=12&key=твой_ключ\nconst URL = \"https://pixabay.com/api/?image_type=\";\nconst KEY = \"21031732-6fee4eefe658f550324b0a29e\"; // pPage 200(20)\nconst constURL = `${URL}photo&orientation=horizontal&key=${KEY}&per_page=12&q=`;\n\nconst fKeys = (arr) => {\n  return arr.map(({ id, webformatURL, largeImageURL }) => {\n    return { id, webformatURL, largeImageURL };\n  });\n};\n\nexport default function fetchPix(query, pageN) {\n  return fetch(`${constURL}${query}&page=${pageN}`)\n    .then((r) => r.json())\n    .then((r) => fKeys(r.hits));\n}\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Searchbar({ onSubmitDo }) {\r\n  return (\r\n    <>\r\n      <header className=\"Searchbar\">\r\n        <form\r\n          className=\"SearchForm\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            onSubmitDo(e.target.elements[1].value); //  как взять нужный ДОМ эл-т по тегу, а не поряд.номеру?\r\n            e.target.elements[1].value = \"\";\r\n          }}\r\n        >\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmitDo: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\n\nexport default function ImageGalleryItem({ id, url, clickOnImg }) {\n  return (\n    <img\n      className=\"galleryImg\"\n      id={id}\n      src={url}\n      alt=\"img\"\n      onClick={clickOnImg}\n    ></img>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  url: PropTypes.string.isRequired,\n  clickOnImg: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n\nexport default function ImageGallery({ imgs, clickOnGall }) {\n  // console.log(clickOnGall);\n  return (\n    <ul className=\"ImageGallery\">\n      {imgs.map(({ id, webformatURL }, idx) => (\n        <li key={idx}>\n          <ImageGalleryItem\n            id={id}\n            url={webformatURL}\n            clickOnImg={clickOnGall}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  imgs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      webformatURL: PropTypes.string,\n      largeImageUrl: PropTypes.string,\n    })\n  ),\n  clickOnGall: PropTypes.func.isRequired,\n};\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Modal({ urlBigImg, onClose }) {\n  const handleKeyDown = (e) => {\n    if (e.code === \"Escape\") onClose();\n  };\n\n  const handleClickOnBD = (e) => {\n    if (e.target === e.currentTarget) onClose();\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    document.body.classList.toggle(\"no-scroll\");\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.classList.toggle(\"no-scroll\");\n    };\n  });\n\n  return (\n    <div className=\"Overlay\" onClick={handleClickOnBD}>\n      <div className=\"Modal\">\n        <img src={urlBigImg} alt=\"oversize\" />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  urlBigImg: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n}; // https://basiclightbox.electerious.com/\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\"; // import axios from \"axios\";\nimport Loader from \"react-loader-spinner\"; // import { ToastContainer } from \"react-toastify\";\n\nimport fetchPix from \"./js/Api\";\nimport Searchbar from \"./Comps/Searchbar\"; // import \"react-toastify/dist/ReactToastify.css\";\nimport ImageGallery from \"./Comps/ImageGallery\";\nimport Modal from \"./Comps/Modal\";\nimport Button from \"./Comps/Button\";\n\nexport default function App() {\n  const [query, setQuery] = useState(null);\n  const [curPage, setCurPage] = useState(1);\n  const [imgs, setImgs] = useState([]);\n  const [modalImgId, setModalImgId] = useState(null);\n  const [showM, setShowM] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = () => setShowM(!showM);\n  const handleMore = () => setCurPage((oldS) => oldS + 1);\n\n  const toSearch = (id) => {\n    return imgs[imgs.map((el) => el.id).indexOf(id)].largeImageURL;\n  }; // return url big img by id (take from DOM by click on gall)\n\n  const handleTakeID = (e) => {\n    setModalImgId(+e.target.id);\n    toggleModal();\n  };\n\n  const handleSubmit = (query) => {\n    setQuery(query);\n    setCurPage(1);\n    setImgs([]);\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setIsLoading(true);\n    fetchPix(query, curPage).then((r) => setImgs((oldS) => [...oldS, ...r]));\n    setIsLoading(false);\n  }, [query, curPage]);\n\n  window.scrollTo({\n    top: document.body.scrollHeight,\n    behavior: \"smooth\",\n  }); // const notify = () => toast(\"Wow so easy!\");\n\n  return (\n    <div className=\"App\">\n      {isLoading && <Loader className=\"Loader\" type=\"Watch\" />}\n      {/* <button onClick={notify}>Notify!</button>  */}\n      <Searchbar onSubmitDo={handleSubmit} />\n      {!isLoading && imgs.length > 0 && (\n        <>\n          <ImageGallery imgs={imgs} clickOnGall={handleTakeID} />\n          <Button onClick={handleMore} />\n        </>\n      )}\n      {showM && (\n        <Modal urlBigImg={toSearch(modalImgId)} onClose={toggleModal} />\n      )}{\" \"}\n      {/* <ToastContainer /> */}\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />,\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}