{"version":3,"sources":["js/Api.js","Comps/Searchbar.jsx","Comps/ImageGalleryItem.jsx","Comps/ImageGallery.jsx","Comps/Modal.jsx","Comps/Button.jsx","App.js","index.js"],"names":["constURL","fetchPix","query","pageN","fetch","then","r","json","hits","map","el","id","webformatURL","largeImageURL","Searchbar","onSubmitDo","className","onSubmit","e","preventDefault","target","elements","value","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","url","clickOnImg","src","alt","onClick","ImageGallery","imgs","clickOnGall","Modal","handleKeyDown","code","props","onClose","handleClickOnBD","currentTarget","window","addEventListener","this","removeEventListener","urlBigImg","Component","Button","App","state","curPage","modalImgId","showM","isLoading","handleSubmit","setState","toggleModal","handleMore","handleTakeID","_","pState","a","scrollTo","top","document","body","scrollHeight","behavior","length","indexOf","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39835de2.chunk.js","sourcesContent":["// const {data}=await axios.get(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${this.state.query}$&page=1&per_page=12&key=21031732-6fee4eefe658f550324b0a29e`)\n// https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=что_искать&page=номер_страницы&per_page=12&key=твой_ключ\nconst URL = \"https://pixabay.com/api/?image_type=\";\nconst KEY = \"21031732-6fee4eefe658f550324b0a29e\"; // pPage 200(20)\nconst constURL = `${URL}photo&orientation=horizontal&key=${KEY}&per_page=12&q=`;\n\nconst fKeys = (arr) => {\n  return arr.map((el) => {\n    return {\n      id: el.id,\n      webformatURL: el.webformatURL,\n      largeImageURL: el.largeImageURL,\n    };\n  });\n};\n\nexport default function fetchPix(query, pageN) {\n  return fetch(`${constURL}${query}&page=${pageN}`)\n    .then((r) => r.json())\n    .then((r) => fKeys(r.hits));\n}\n","import PropTypes from \"prop-types\";\n\nexport default function Searchbar({ onSubmitDo }) {\n  return (\n    <>\n      <header className=\"Searchbar\">\n        <form\n          className=\"SearchForm\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSubmitDo(e.target.elements[1].value); //  как взять нужный ДОМ эл-т по тегу, а не поряд.номеру?\n            e.target.elements[1].value = \"\";\n          }}\n        >\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    </>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmitDo: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nexport default function ImageGalleryItem({ id, url, clickOnImg }) {\n  return (\n    <img\n      className=\"galleryImg\"\n      id={id}\n      src={url}\n      alt=\"img\"\n      onClick={clickOnImg}\n    ></img>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  url: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nexport default function ImageGallery({ imgs, clickOnGall }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {imgs.map(({ id, webformatURL }) => (\n        <li key={id}>\n          <ImageGalleryItem\n            id={id}\n            url={webformatURL}\n            clickOnImg={clickOnGall}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  imgs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      webformatURL: PropTypes.string,\n      // largeImageURL: PropTypes.string,\n      // tags: PropTypes.string,\n    })\n  ),\n  clickOnGall: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") this.props.onClose();\n  };\n  handleClickOnBD = (e) => {\n    if (e.target === e.currentTarget) this.props.onClose();\n  };\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleClickOnBD}>\n        <div className=\"Modal\">\n          <img src={this.props.urlBigImg} alt=\"oversize\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  urlBigImg: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n}; // https://basiclightbox.electerious.com/\n","import PropTypes from \"prop-types\";\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\"; // import axios from \"axios\";\nimport Loader from \"react-loader-spinner\"; // import { ToastContainer } from \"react-toastify\";\nimport fetchPix from \"./js/Api\";\n\nimport Searchbar from \"./Comps/Searchbar\"; // import \"react-toastify/dist/ReactToastify.css\";\nimport ImageGallery from \"./Comps/ImageGallery\";\nimport Modal from \"./Comps/Modal\";\n\nimport Button from \"./Comps/Button\";\n\nexport default class App extends Component {\n  state = {\n    query: null,\n    curPage: 1,\n    imgs: [],\n    modalImgId: null,\n    showM: false,\n    isLoading: false,\n  };\n\n  handleSubmit = (query) => this.setState({ query, curPage: 1 });\n  toggleModal = () => this.setState({ showM: !this.state.showM });\n  handleMore = () => this.setState(({ curPage }) => ({ curPage: curPage + 1 }));\n\n  handleTakeID = (e) => {\n    this.setState({ modalImgId: +e.target.id });\n    this.toggleModal();\n  };\n\n  async componentDidUpdate(_, pState) {\n    let { query, curPage, imgs } = this.state;\n\n    this.setState({ isLoading: true });\n\n    if (pState.query !== query || pState.curPage !== curPage) {\n      imgs = [...imgs, ...(await fetchPix(query, curPage))];\n    }\n\n    this.setState({ imgs, isLoading: false });\n\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: \"smooth\",\n    }); // console.log(\"final cDU\");\n  }\n\n  render() {\n    // const notify = () => toast(\"Wow so easy!\");\n    const { state, handleTakeID, handleMore, toggleModal } = this;\n    const { imgs, isLoading, showM, modalImgId } = state;\n    const toSearch = (id) => {\n      return imgs[imgs.map((el) => el.id).indexOf(id)].largeImageURL;\n    }; // return big img url by id (take from DOM by click on screen)\n\n    return (\n      <div className=\"App\">\n        {isLoading && (\n          <Loader\n            className=\"Loader\"\n            type=\"Watch\"\n            // type=\"ThreeDots\" color=\"red\" color=\"#00BFFF\" height={100} width={100} timeout={3000} 303f9f\n            // Audio Watch Triangle BallTriangle Bars Circles Grid Hearts Oval Puff Rings TailSpin ThreeDots RevolvingDot MutatingDots\n          />\n        )}\n        {/* <button onClick={notify}>Notify!</button>  */}\n        <Searchbar onSubmitDo={(query) => this.setState({ query })} />\n        {!isLoading && imgs.length > 0 && (\n          <>\n            <ImageGallery imgs={imgs} clickOnGall={handleTakeID} />\n            <Button onClick={handleMore} />\n          </>\n        )}\n        {showM && (\n          <Modal urlBigImg={toSearch(modalImgId)} onClose={toggleModal} />\n        )}{\" \"}\n        {/* <ToastContainer /> */}\n      </div>\n    );\n  }\n} // <Searchbar> <ImageGallery> <ImageGalleryItem> <Loader> <Button> <Modal>\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}